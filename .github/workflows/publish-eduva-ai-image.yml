name: Publish Eduva AI Workers Images

on:
  push:
    branches:
      - master
    paths:
      - src/**
      - requirements-*.txt
      - content_worker.py
      - product_worker.py
      - Dockerfile.*

jobs:
  publish:
    name: Publish AI Workers Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        worker_type: [content, product]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from file
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Building version: $VERSION"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Content Worker Image
        if: matrix.worker_type == 'content'
        run: |
          docker buildx build . \
            --file Dockerfile.content \
            --tag ghcr.io/${{ github.repository_owner }}/eduva-ai-content-worker:latest \
            --tag ghcr.io/${{ github.repository_owner }}/eduva-ai-content-worker:${{ steps.version.outputs.version }} \
            --platform linux/amd64,linux/arm64 \
            --push \
            --cache-from=type=local,src=/tmp/.buildx-cache-content \
            --cache-to=type=local,dest=/tmp/.buildx-cache-content

      - name: Build and push Product Worker Image
        if: matrix.worker_type == 'product'
        run: |
          docker buildx build . \
            --file Dockerfile.product \
            --tag ghcr.io/${{ github.repository_owner }}/eduva-ai-product-worker:latest \
            --tag ghcr.io/${{ github.repository_owner }}/eduva-ai-product-worker:${{ steps.version.outputs.version }} \
            --platform linux/amd64,linux/arm64 \
            --push \
            --cache-from=type=local,src=/tmp/.buildx-cache-product \
            --cache-to=type=local,dest=/tmp/.buildx-cache-product
